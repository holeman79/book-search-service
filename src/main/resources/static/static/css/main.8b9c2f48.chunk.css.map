{"version":3,"sources":["main.8b9c2f48.chunk.css","PageTemplate.scss","Header.scss","../../../../node_modules/open-color/open-color.scss","../../../../node_modules/include-media/dist/_include-media.scss","Button.scss","../../../styles/lib/_mixins.scss","Footer.scss","Wrapper.scss","Pagination.scss","BookList.scss","SearchBar.scss","base.scss"],"names":[],"mappings":"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","file":"main.8b9c2f48.chunk.css","sourcesContent":["@import url(//fonts.googleapis.com/earlyaccess/notosanskr.css);\n@import url(//cdn.jsdelivr.net/gh/velopert/font-d2coding@1.2.1/d2coding.css);\n.page-template main{background:white;min-height:calc(100vh - 15rem)}\n\n.header{background:white;border-bottom:1px solid #ced4da}.header .header-content{height:5rem;width:80rem;margin:0 auto;padding-left:0rem;padding-right:3rem;display:flex;align-items:center}@media (max-width: 1399px){.header .header-content{width:100%}}@media (max-width: 767px){.header .header-content{padding-left:1rem;padding-right:1rem}}.header .header-content .brand{color:black;font-size:1.5rem;font-weight:600}.header .header-content .right{margin-left:auto}.header .header-content .left{margin-right:auto}.header .category{height:5rem;width:1400px;margin:2rem auto;padding-left:3rem;padding-right:3rem;display:flex;align-items:center;justify-content:center}@media (max-width: 1399px){.header .category{width:100%}}@media (max-width: 767px){.header .category{padding-left:1rem;padding-right:1rem}}.header .category .item{color:black;font-size:1rem;font-weight:200;margin:1rem}\n\n.button{padding-left:0.5rem;padding-right:0.5rem;padding-top:0.25rem;padding-botton:0.25rem;font-weight:600;font-size:0.9rem;color:black;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:inline;text-align:center}.button.default{background:#fcc419}.button.default:hover{background:#ffd43b}.button.default:active{background:#fab005}.button.gray{background:#ced4da;width:4rem;height:1.5rem;color:#495057}.button.gray:hover{background:#868e96}.button.gray:active{background:#495057}.button.outline{border:none;border-radius:2px}.button.outline:hover{background:black;color:white}.button.outline:active{background:black;border:2px solid rgba(255,255,255,0.85)}.button:hover{box-shadow:0 3px 6px rgba(0,0,0,0.08),0 3px 6px rgba(0,0,0,0.115)}.button.disabled{background:#ced4da;color:#868e96;cursor:default}.button.disabled:hover,.button.disabled:active{box-shadow:none;background:#ced4da}.button+.button{margin-left:0.5rem}\n\n.footer{background:#ffe066;height:10rem;display:flex;align-items:center;justify-content:center;flex-direction:column}.footer .brand{color:white;font-size:2rem;font-weight:600}.footer .font{margin-top:0.5rem;font-weight:600;font-size:0.8rem;color:rgba(255,255,255,0.8);cursor:pointer}.footer .font:hover{color:white}\n\n.title{padding-top:1rem;padding-bottom:1rem;font-size:2rem;font-weight:400}.list-wrapper{width:70%;margin:0 auto;padding-top:3rem;padding-bottom:3rem;padding-left:1rem;padding-right:1rem}@media (max-width: 1399px){.list-wrapper{width:768px}}@media (max-width: 1023px){.list-wrapper{width:512px}}@media (max-width: 767px){.list-wrapper{width:100%}}\n\n.pagination{margin-top:2rem;display:flex;align-itmes:center}.pagination .number{font-size:0.79rem;text-align:center;color:#868e96;flex:1 1}\n\n.post-list .post-item{padding:1.5rem;-webkit-transition:all .15s ease-in;transition:all .15s ease-in}.post-list .post-item h2{font-size:2rem;font-weight:400;margin:0;color:#495057}.post-list .post-item h2 a{-webkit-transition:all .15s ease-in;transition:all .15s ease-in;border-bottom:1px solid transparent}.post-list .post-item h2 a:hover{color:#228be6;border-bottom:1px solid #228be6}.post-list .post-item .date{font-size:0.79rem;color:#adb5bd}.post-list .post-item p{font-weight:300;color:#495057}.post-list .post-item .tags{font-size:0.79rem;color:#228be6}.post-list .post-item .tags a:hover{color:#339af0;text-decoration:underline}.post-list .post-item .tags a+a{margin-left:0.25rem}.post-list .post-item:hover{background:rgba(34,139,230,0.05)}.post-list .post-item+.post-item{border-top:1px solid #dee2e6}\n\n.search-bar{display:flex;align-items:center;margin-bottom:1rem;font-size:1rem;height:3rem}.search-bar .target{margin:.5em;font-size:1rem;padding:.5em;border:1px solid #ccc;border-color:#dbdbdb #d2d2d2 #d0d0d0 #d2d2d3;box-shadow:inset 0.1em 0.1em 0.15em rgba(0,0,0,0.1);vertical-align:middle;line-height:1.25em;outline:0;width:10%;height:80%}.search-bar input{margin:.5em;margin-right:1rem;font-size:1rem;padding:.5em;border:1px solid #ccc;border-color:#dbdbdb #d2d2d2 #d0d0d0 #d2d2d3;box-shadow:inset 0.1em 0.1em 0.15em rgba(0,0,0,0.1);vertical-align:middle;line-height:1.25em;outline:0;flex:1 1;height:80%}.search-bar .button{width:10%;height:70%}\n\nbody{margin:0;box-sizing:border-box;font-family:\"Noto Sans KR\", sans-serif;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}*{box-sizing:inherit}a{text-decoration:inherit;color:inherit}\n\n","@import \"../../../styles/utils\";\n\n.page-template {\n  main {\n    background: white;\n    min-height: calc(100vh - 15rem);\n  }\n}","@import \"../../../styles/utils\";\n\n.header {\n  background: white;\n  border-bottom: 1px solid $oc-gray-4;\n  .header-content {\n    height: 5rem;\n    width: 80rem;\n    margin: 0 auto;\n    padding-left: 0rem;\n    padding-right: 3rem;\n\n    display: flex;\n    align-items: center;\n\n    @include media(\"<wide\") {\n      width: 100%;\n    }\n    @include media(\"<medium\") {\n      padding-left: 1rem;\n      padding-right: 1rem;\n    }\n\n    .brand{\n      color: black;\n      font-size: 1.5rem;\n      font-weight: 600;\n\n    }\n\n    .right {\n      margin-left: auto;\n    }\n    .left {\n      margin-right: auto;\n    }\n  }\n  .category {\n    height: 5rem;\n    width: 1400px;\n    margin: 2rem auto;\n    padding-left: 3rem;\n    padding-right: 3rem;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    @include media(\"<wide\") {\n      width: 100%;\n    }\n    @include media(\"<medium\") {\n      padding-left: 1rem;\n      padding-right: 1rem;\n    }\n    .item{\n      color: black;\n      font-size: 1rem;\n      font-weight: 200;\n      margin: 1rem;\n    }\n  }\n}","//\n//\n//  𝗖 𝗢 𝗟 𝗢 𝗥\n//  v 1.7.0\n//\n//  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n\n//  General\n//  ───────────────────────────────────\n\n$oc-white:         #ffffff;\n$oc-black:         #000000;\n\n\n//  Gray\n//  ───────────────────────────────────\n\n$oc-gray-list: (\n  \"0\": #f8f9fa,\n  \"1\": #f1f3f5,\n  \"2\": #e9ecef,\n  \"3\": #dee2e6,\n  \"4\": #ced4da,\n  \"5\": #adb5bd,\n  \"6\": #868e96,\n  \"7\": #495057,\n  \"8\": #343a40,\n  \"9\": #212529\n);\n\n$oc-gray-0: map-get($oc-gray-list, \"0\");\n$oc-gray-1: map-get($oc-gray-list, \"1\");\n$oc-gray-2: map-get($oc-gray-list, \"2\");\n$oc-gray-3: map-get($oc-gray-list, \"3\");\n$oc-gray-4: map-get($oc-gray-list, \"4\");\n$oc-gray-5: map-get($oc-gray-list, \"5\");\n$oc-gray-6: map-get($oc-gray-list, \"6\");\n$oc-gray-7: map-get($oc-gray-list, \"7\");\n$oc-gray-8: map-get($oc-gray-list, \"8\");\n$oc-gray-9: map-get($oc-gray-list, \"9\");\n\n\n//  Red\n//  ───────────────────────────────────\n\n$oc-red-list: (\n  \"0\": #fff5f5,\n  \"1\": #ffe3e3,\n  \"2\": #ffc9c9,\n  \"3\": #ffa8a8,\n  \"4\": #ff8787,\n  \"5\": #ff6b6b,\n  \"6\": #fa5252,\n  \"7\": #f03e3e,\n  \"8\": #e03131,\n  \"9\": #c92a2a\n);\n\n$oc-red-0: map-get($oc-red-list, \"0\");\n$oc-red-1: map-get($oc-red-list, \"1\");\n$oc-red-2: map-get($oc-red-list, \"2\");\n$oc-red-3: map-get($oc-red-list, \"3\");\n$oc-red-4: map-get($oc-red-list, \"4\");\n$oc-red-5: map-get($oc-red-list, \"5\");\n$oc-red-6: map-get($oc-red-list, \"6\");\n$oc-red-7: map-get($oc-red-list, \"7\");\n$oc-red-8: map-get($oc-red-list, \"8\");\n$oc-red-9: map-get($oc-red-list, \"9\");\n\n\n//  Pink\n//  ───────────────────────────────────\n\n$oc-pink-list: (\n  \"0\": #fff0f6,\n  \"1\": #ffdeeb,\n  \"2\": #fcc2d7,\n  \"3\": #faa2c1,\n  \"4\": #f783ac,\n  \"5\": #f06595,\n  \"6\": #e64980,\n  \"7\": #d6336c,\n  \"8\": #c2255c,\n  \"9\": #a61e4d\n);\n\n$oc-pink-0: map-get($oc-pink-list, \"0\");\n$oc-pink-1: map-get($oc-pink-list, \"1\");\n$oc-pink-2: map-get($oc-pink-list, \"2\");\n$oc-pink-3: map-get($oc-pink-list, \"3\");\n$oc-pink-4: map-get($oc-pink-list, \"4\");\n$oc-pink-5: map-get($oc-pink-list, \"5\");\n$oc-pink-6: map-get($oc-pink-list, \"6\");\n$oc-pink-7: map-get($oc-pink-list, \"7\");\n$oc-pink-8: map-get($oc-pink-list, \"8\");\n$oc-pink-9: map-get($oc-pink-list, \"9\");\n\n\n//  Grape\n//  ───────────────────────────────────\n\n$oc-grape-list: (\n  \"0\": #f8f0fc,\n  \"1\": #f3d9fa,\n  \"2\": #eebefa,\n  \"3\": #e599f7,\n  \"4\": #da77f2,\n  \"5\": #cc5de8,\n  \"6\": #be4bdb,\n  \"7\": #ae3ec9,\n  \"8\": #9c36b5,\n  \"9\": #862e9c\n);\n\n$oc-grape-0: map-get($oc-grape-list, \"0\");\n$oc-grape-1: map-get($oc-grape-list, \"1\");\n$oc-grape-2: map-get($oc-grape-list, \"2\");\n$oc-grape-3: map-get($oc-grape-list, \"3\");\n$oc-grape-4: map-get($oc-grape-list, \"4\");\n$oc-grape-5: map-get($oc-grape-list, \"5\");\n$oc-grape-6: map-get($oc-grape-list, \"6\");\n$oc-grape-7: map-get($oc-grape-list, \"7\");\n$oc-grape-8: map-get($oc-grape-list, \"8\");\n$oc-grape-9: map-get($oc-grape-list, \"9\");\n\n\n//  Violet\n//  ───────────────────────────────────\n\n$oc-violet-list: (\n  \"0\": #f3f0ff,\n  \"1\": #e5dbff,\n  \"2\": #d0bfff,\n  \"3\": #b197fc,\n  \"4\": #9775fa,\n  \"5\": #845ef7,\n  \"6\": #7950f2,\n  \"7\": #7048e8,\n  \"8\": #6741d9,\n  \"9\": #5f3dc4\n);\n\n$oc-violet-0: map-get($oc-violet-list, \"0\");\n$oc-violet-1: map-get($oc-violet-list, \"1\");\n$oc-violet-2: map-get($oc-violet-list, \"2\");\n$oc-violet-3: map-get($oc-violet-list, \"3\");\n$oc-violet-4: map-get($oc-violet-list, \"4\");\n$oc-violet-5: map-get($oc-violet-list, \"5\");\n$oc-violet-6: map-get($oc-violet-list, \"6\");\n$oc-violet-7: map-get($oc-violet-list, \"7\");\n$oc-violet-8: map-get($oc-violet-list, \"8\");\n$oc-violet-9: map-get($oc-violet-list, \"9\");\n\n\n//  Indigo\n//  ───────────────────────────────────\n\n$oc-indigo-list: (\n  \"0\": #edf2ff,\n  \"1\": #dbe4ff,\n  \"2\": #bac8ff,\n  \"3\": #91a7ff,\n  \"4\": #748ffc,\n  \"5\": #5c7cfa,\n  \"6\": #4c6ef5,\n  \"7\": #4263eb,\n  \"8\": #3b5bdb,\n  \"9\": #364fc7\n);\n\n$oc-indigo-0: map-get($oc-indigo-list, \"0\");\n$oc-indigo-1: map-get($oc-indigo-list, \"1\");\n$oc-indigo-2: map-get($oc-indigo-list, \"2\");\n$oc-indigo-3: map-get($oc-indigo-list, \"3\");\n$oc-indigo-4: map-get($oc-indigo-list, \"4\");\n$oc-indigo-5: map-get($oc-indigo-list, \"5\");\n$oc-indigo-6: map-get($oc-indigo-list, \"6\");\n$oc-indigo-7: map-get($oc-indigo-list, \"7\");\n$oc-indigo-8: map-get($oc-indigo-list, \"8\");\n$oc-indigo-9: map-get($oc-indigo-list, \"9\");\n\n\n//  Blue\n//  ───────────────────────────────────\n\n$oc-blue-list: (\n  \"0\": #e7f5ff,\n  \"1\": #d0ebff,\n  \"2\": #a5d8ff,\n  \"3\": #74c0fc,\n  \"4\": #4dabf7,\n  \"5\": #339af0,\n  \"6\": #228be6,\n  \"7\": #1c7ed6,\n  \"8\": #1971c2,\n  \"9\": #1864ab\n);\n\n$oc-blue-0: map-get($oc-blue-list, \"0\");\n$oc-blue-1: map-get($oc-blue-list, \"1\");\n$oc-blue-2: map-get($oc-blue-list, \"2\");\n$oc-blue-3: map-get($oc-blue-list, \"3\");\n$oc-blue-4: map-get($oc-blue-list, \"4\");\n$oc-blue-5: map-get($oc-blue-list, \"5\");\n$oc-blue-6: map-get($oc-blue-list, \"6\");\n$oc-blue-7: map-get($oc-blue-list, \"7\");\n$oc-blue-8: map-get($oc-blue-list, \"8\");\n$oc-blue-9: map-get($oc-blue-list, \"9\");\n\n\n//  Cyan\n//  ───────────────────────────────────\n\n$oc-cyan-list: (\n  \"0\": #e3fafc,\n  \"1\": #c5f6fa,\n  \"2\": #99e9f2,\n  \"3\": #66d9e8,\n  \"4\": #3bc9db,\n  \"5\": #22b8cf,\n  \"6\": #15aabf,\n  \"7\": #1098ad,\n  \"8\": #0c8599,\n  \"9\": #0b7285\n);\n\n$oc-cyan-0: map-get($oc-cyan-list, \"0\");\n$oc-cyan-1: map-get($oc-cyan-list, \"1\");\n$oc-cyan-2: map-get($oc-cyan-list, \"2\");\n$oc-cyan-3: map-get($oc-cyan-list, \"3\");\n$oc-cyan-4: map-get($oc-cyan-list, \"4\");\n$oc-cyan-5: map-get($oc-cyan-list, \"5\");\n$oc-cyan-6: map-get($oc-cyan-list, \"6\");\n$oc-cyan-7: map-get($oc-cyan-list, \"7\");\n$oc-cyan-8: map-get($oc-cyan-list, \"8\");\n$oc-cyan-9: map-get($oc-cyan-list, \"9\");\n\n\n//  Teal\n//  ───────────────────────────────────\n\n$oc-teal-list: (\n  \"0\": #e6fcf5,\n  \"1\": #c3fae8,\n  \"2\": #96f2d7,\n  \"3\": #63e6be,\n  \"4\": #38d9a9,\n  \"5\": #20c997,\n  \"6\": #12b886,\n  \"7\": #0ca678,\n  \"8\": #099268,\n  \"9\": #087f5b\n);\n\n$oc-teal-0: map-get($oc-teal-list, \"0\");\n$oc-teal-1: map-get($oc-teal-list, \"1\");\n$oc-teal-2: map-get($oc-teal-list, \"2\");\n$oc-teal-3: map-get($oc-teal-list, \"3\");\n$oc-teal-4: map-get($oc-teal-list, \"4\");\n$oc-teal-5: map-get($oc-teal-list, \"5\");\n$oc-teal-6: map-get($oc-teal-list, \"6\");\n$oc-teal-7: map-get($oc-teal-list, \"7\");\n$oc-teal-8: map-get($oc-teal-list, \"8\");\n$oc-teal-9: map-get($oc-teal-list, \"9\");\n\n\n//  Green\n//  ───────────────────────────────────\n\n$oc-green-list: (\n  \"0\": #ebfbee,\n  \"1\": #d3f9d8,\n  \"2\": #b2f2bb,\n  \"3\": #8ce99a,\n  \"4\": #69db7c,\n  \"5\": #51cf66,\n  \"6\": #40c057,\n  \"7\": #37b24d,\n  \"8\": #2f9e44,\n  \"9\": #2b8a3e\n);\n\n$oc-green-0: map-get($oc-green-list, \"0\");\n$oc-green-1: map-get($oc-green-list, \"1\");\n$oc-green-2: map-get($oc-green-list, \"2\");\n$oc-green-3: map-get($oc-green-list, \"3\");\n$oc-green-4: map-get($oc-green-list, \"4\");\n$oc-green-5: map-get($oc-green-list, \"5\");\n$oc-green-6: map-get($oc-green-list, \"6\");\n$oc-green-7: map-get($oc-green-list, \"7\");\n$oc-green-8: map-get($oc-green-list, \"8\");\n$oc-green-9: map-get($oc-green-list, \"9\");\n\n\n//  Lime\n//  ───────────────────────────────────\n\n$oc-lime-list: (\n  \"0\": #f4fce3,\n  \"1\": #e9fac8,\n  \"2\": #d8f5a2,\n  \"3\": #c0eb75,\n  \"4\": #a9e34b,\n  \"5\": #94d82d,\n  \"6\": #82c91e,\n  \"7\": #74b816,\n  \"8\": #66a80f,\n  \"9\": #5c940d\n);\n\n$oc-lime-0: map-get($oc-lime-list, \"0\");\n$oc-lime-1: map-get($oc-lime-list, \"1\");\n$oc-lime-2: map-get($oc-lime-list, \"2\");\n$oc-lime-3: map-get($oc-lime-list, \"3\");\n$oc-lime-4: map-get($oc-lime-list, \"4\");\n$oc-lime-5: map-get($oc-lime-list, \"5\");\n$oc-lime-6: map-get($oc-lime-list, \"6\");\n$oc-lime-7: map-get($oc-lime-list, \"7\");\n$oc-lime-8: map-get($oc-lime-list, \"8\");\n$oc-lime-9: map-get($oc-lime-list, \"9\");\n\n\n//  Yellow\n//  ───────────────────────────────────\n\n$oc-yellow-list: (\n  \"0\": #fff9db,\n  \"1\": #fff3bf,\n  \"2\": #ffec99,\n  \"3\": #ffe066,\n  \"4\": #ffd43b,\n  \"5\": #fcc419,\n  \"6\": #fab005,\n  \"7\": #f59f00,\n  \"8\": #f08c00,\n  \"9\": #e67700\n);\n\n$oc-yellow-0: map-get($oc-yellow-list, \"0\");\n$oc-yellow-1: map-get($oc-yellow-list, \"1\");\n$oc-yellow-2: map-get($oc-yellow-list, \"2\");\n$oc-yellow-3: map-get($oc-yellow-list, \"3\");\n$oc-yellow-4: map-get($oc-yellow-list, \"4\");\n$oc-yellow-5: map-get($oc-yellow-list, \"5\");\n$oc-yellow-6: map-get($oc-yellow-list, \"6\");\n$oc-yellow-7: map-get($oc-yellow-list, \"7\");\n$oc-yellow-8: map-get($oc-yellow-list, \"8\");\n$oc-yellow-9: map-get($oc-yellow-list, \"9\");\n\n\n//  Orange\n//  ───────────────────────────────────\n\n$oc-orange-list: (\n  \"0\": #fff4e6,\n  \"1\": #ffe8cc,\n  \"2\": #ffd8a8,\n  \"3\": #ffc078,\n  \"4\": #ffa94d,\n  \"5\": #ff922b,\n  \"6\": #fd7e14,\n  \"7\": #f76707,\n  \"8\": #e8590c,\n  \"9\": #d9480f\n);\n\n$oc-orange-0: map-get($oc-orange-list, \"0\");\n$oc-orange-1: map-get($oc-orange-list, \"1\");\n$oc-orange-2: map-get($oc-orange-list, \"2\");\n$oc-orange-3: map-get($oc-orange-list, \"3\");\n$oc-orange-4: map-get($oc-orange-list, \"4\");\n$oc-orange-5: map-get($oc-orange-list, \"5\");\n$oc-orange-6: map-get($oc-orange-list, \"6\");\n$oc-orange-7: map-get($oc-orange-list, \"7\");\n$oc-orange-8: map-get($oc-orange-list, \"8\");\n$oc-orange-9: map-get($oc-orange-list, \"9\");\n\n\n//  Color list\n//  ───────────────────────────────────\n\n$oc-color-spectrum:   9;\n\n$oc-color-list: (\n  $oc-gray-list:      \"gray\",\n  $oc-red-list:      \"red\",\n  $oc-pink-list:      \"pink\",\n  $oc-grape-list:      \"grape\",\n  $oc-violet-list:      \"violet\",\n  $oc-indigo-list:      \"indigo\",\n  $oc-blue-list:      \"blue\",\n  $oc-cyan-list:      \"cyan\",\n  $oc-teal-list:      \"teal\",\n  $oc-green-list:      \"green\",\n  $oc-lime-list:      \"lime\",\n  $oc-yellow-list:      \"yellow\",\n  $oc-orange-list:      \"orange\"\n);\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      // scss-lint:disable SpaceAroundOperator\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  // scss-lint:disable SpaceAroundOperator\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n","@import \"../../../styles/utils\";\n\n.button {\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n  padding-top: 0.25rem;\n  padding-botton: 0.25rem;\n  font-weight: 600;\n  font-size: 0.9rem;\n  color: black;\n  cursor: pointer;\n  user-select: none;\n  display: inline;\n  text-align: center;\n\n  &.default{\n    background: $oc-yellow-5;\n    &:hover{\n      background: $oc-yellow-4;\n    }\n    &:active{\n      background: $oc-yellow-6;\n    }\n  }\n\n  &.gray{\n    background: $oc-gray-4;\n    width: 4rem;\n    height: 1.5rem;\n    color: $oc-gray-7;\n    &:hover{\n      background: $oc-gray-6;\n    }\n    &:active{\n      background: $oc-gray-7;\n    }\n  }\n\n  &.outline {\n    border: none;\n    border-radius: 2px;\n    &:hover {\n      background: black;\n      color: white;\n    }\n    &:active {\n      background: black;\n      border: 2px solid rgba(255, 255, 255, 0.85);\n    }\n  }\n\n  &:hover {\n    @include material-shadow(2, 0.5);\n  }\n\n  &.disabled {\n    background: $oc-gray-4;\n    color: $oc-gray-6;\n    cursor: default;\n    &:hover, &:active {\n      box-shadow: none;\n      background: $oc-gray-4;\n    }\n  }\n\n  & + & {\n    margin-left: 0.5rem;\n  }\n}","@mixin material-shadow($z-depth: 1, $strength: 1, $color: black) {\n  @if $z-depth == 1 {\n    box-shadow: 0 1px 3px rgba($color, $strength * 0.14), 0 1px 2px rgba($color, $strength * 0.24);\n  }\n  @if $z-depth == 2 {\n    box-shadow: 0 3px 6px rgba($color, $strength * 0.16), 0 3px 6px rgba($color, $strength * 0.23);\n  }\n  @if $z-depth == 3 {\n    box-shadow: 0 10px 20px rgba($color, $strength * 0.19), 0 6px 6px rgba($color, $strength * 0.23);\n  }\n  @if $z-depth == 4 {\n    box-shadow: 0 15px 30px rgba($color, $strength * 0.25), 0 10px 10px rgba($color, $strength * 0.22);\n  }\n  @if $z-depth == 5 {\n    box-shadow: 0 20px 40px rgba($color, $strength * 0.30), 0 15px 12px rgba($color, $strength * 0.22);\n  }\n  @if ($z-depth < 1) or ($z-depth > 5) {\n    @warn \"$z-depth must be between 1 and 5\";\n  }\n}","@import \"../../../styles/utils\";\n\n.footer{\n  background: $oc-yellow-3;\n  height: 10rem;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n\n  .brand {\n    color: white;\n    font-size: 2rem;\n    font-weight: 600;\n  }\n\n  .font {\n    margin-top: 0.5rem;\n    font-weight: 600;\n    font-size: 0.8rem;\n    color: rgba(255, 255, 255, 0.8);\n    cursor: pointer;\n    &:hover {\n      color:white;\n    }\n  }\n}","@import \"../../../styles/utils\";\n\n.title{\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  font-size: 2rem;\n  font-weight: 400;\n}\n.list-wrapper {\n  width: 70%;\n  margin: 0 auto;\n\n  padding-top: 3rem;\n  padding-bottom: 3rem;\n  padding-left: 1rem;\n  padding-right: 1rem;\n\n  @include media(\"<wide\"){\n    width: 768px;\n  }\n  @include media(\"<large\"){\n    width: 512px;\n  }\n  @include media(\"<medium\"){\n    width: 100%;\n  }\n}","@import \"../../../styles/utils\";\n\n.pagination {\n  margin-top: 2rem;\n\n  display: flex;\n  align-itmes: center;\n\n  .number{\n    font-size: 0.79rem;\n    text-align: center;\n    color: $oc-gray-6;\n    flex: 1;\n  }\n}","@import \"../../../styles/utils\";\n\n.post-list{\n  .post-item {\n    padding: 1.5rem;\n    transition: all .15s ease-in;\n    h2{\n      font-size: 2rem;\n      font-weight: 400;\n      margin: 0;\n      color: $oc-gray-7;\n      a{\n        transition: all .15s ease-in;\n        border-bottom: 1px solid transparent;\n      }\n      a:hover {\n        color: $oc-blue-6;\n        border-bottom: 1px solid $oc-blue-6;\n      }\n    }\n    .date {\n      font-size: 0.79rem;\n      color: $oc-gray-5;\n    }\n    p{\n      font-weight: 300;\n      color: $oc-gray-7;\n    }\n    .tags{\n      font-size: 0.79rem;\n      color: $oc-blue-6;\n      a{\n        &:hover{\n          color: $oc-blue-5;\n          text-decoration: underline;\n        }\n      }\n      a + a{\n        margin-left: 0.25rem;\n      }\n    }\n    &:hover {\n      background: rgba($oc-blue-6, 0.05);\n    }\n  }\n  .post-item + .post-item {\n    border-top: 1px solid $oc-gray-3;\n  }\n}","@import \"../../../styles/utils\";\n\n.search-bar{\n  display: flex;\n  align-items: center;\n  margin-bottom: 1rem;\n  font-size: 1rem;\n  height: 3rem;\n\n  .target {\n    margin: .5em;\n    font-size: 1rem;\n    padding: .5em;\n    border: 1px solid #ccc;\n    border-color: #dbdbdb #d2d2d2 #d0d0d0 #d2d2d3;\n    box-shadow: inset 0.1em 0.1em 0.15em rgba(0,0,0,.1);\n    vertical-align: middle;\n    line-height: 1.25em;\n    outline: 0;\n    width: 10%;\n    height: 80%;\n  }\n  input{\n    margin: .5em;\n    margin-right: 1rem;\n    font-size: 1rem;\n    padding: .5em;\n    border: 1px solid #ccc;\n    border-color: #dbdbdb #d2d2d2 #d0d0d0 #d2d2d3;\n    box-shadow: inset 0.1em 0.1em 0.15em rgba(0,0,0,.1);\n    vertical-align: middle;\n    line-height: 1.25em;\n    outline: 0;\n    flex: 1;\n    height: 80%;\n  }\n  .button{\n    width: 10%;\n    height: 70%;\n  }\n}","@import url(\"//fonts.googleapis.com/earlyaccess/notosanskr.css\");\n@import url(\"//cdn.jsdelivr.net/gh/velopert/font-d2coding@1.2.1/d2coding.css\");\n\nbody {\n  margin: 0;\n  box-sizing: border-box;\n  font-family: \"Noto Sans KR\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n* {\n  box-sizing: inherit;\n}\n\na {\n  text-decoration: inherit;\n  color: inherit;\n}"]}